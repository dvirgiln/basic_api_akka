plugins {
    id 'java'
    id 'scala'
}

apply plugin: 'application'
apply plugin: 'scala'
group 'co.copper'

mainClassName = 'co.copper.test.Application'

repositories {
    maven { url 'https://oss.sonatype.org/content/repositories/public' }
    mavenCentral()
}

sourceSets{
    itest {
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
        scala {
        }
    }
}
dependencies {
    def junitVersion = '5.7.2'
    def akkaVersion = "2.6.17"
    annotationProcessor 'org.projectlombok:lombok:1.18.20'
    implementation 'com.sbuslab:utils:1.2.+'
    implementation 'com.sbuslab:akka-http-tools:1.1.+'
    implementation 'com.fasterxml.jackson.module:jackson-module-scala_2.12:2.12.6'
    testImplementation 'org.scalatest:scalatest_2.12:3.2.11'
    testImplementation 'org.scalatestplus:junit-4-13_2.12:3.2.11.0'
    testImplementation "junit:junit:4.12"
    testImplementation "com.typesafe.akka:akka-actor-testkit-typed_2.12:${akkaVersion}"

    /* I had to include all of this here, I know it is not ideal, but the akka-http-testkit
        with the same version that appears in the sbuslab dependencies is not working.
     */
    //testImplementation 'com.typesafe.akka:akka-http-testkit_2.12:10.1.10'      
    testImplementation 'com.typesafe.akka:akka-http-testkit_2.12:10.2.7'
    testImplementation 'com.typesafe.akka:akka-http-jackson_2.12:10.2.7'
    testImplementation 'com.typesafe.akka:akka-http_2.12:10.2.7'
    testImplementation 'com.typesafe.akka:akka-http-core_2.12:10.2.7'
    testImplementation 'com.typesafe.akka:akka-parsing_2.12:10.2.7'
    testImplementation "com.typesafe.akka:akka-protobuf_2.12:${akkaVersion}"
    testImplementation "com.typesafe.akka:akka-stream_2.12:${akkaVersion}"
    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.2.0.RELEASE'
    testImplementation 'com.h2database:h2:1.4.199'
    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
}

task itest(type: Test) {
    description = "Run integration tests"
    group = "verification"
    testClassesDirs = sourceSets.itest.output.classesDirs
    classpath = sourceSets.itest.runtimeClasspath
}

itest {
    testLogging {
        events "passed","skipped", "failed"
    }
}

configurations {
    itestImplementation.extendsFrom(testImplementation)
    itestRuntimeOnly.extendsFrom(testRuntimeOnly)
}